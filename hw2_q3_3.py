#本代码对应第三大题第三小题
import numpy as np
import matplotlib.pyplot as plt

w1=np.array([[0.1,1.1],[6.8,7.1],[-3.5,-4.1],[2.0,2.7],[4.1,2.8],[3.1,5.0],[-0.8,-1.3],[0.9,1.2],[5.0,6.4],[3.9,4.0]])
w2=np.array([[7.1,4.2],[-1.4,-4.3],[4.5,0.0],[6.3,1.6],[4.2,1.9],[1.4,-3.2],[2.4,-4.0],[2.5,-6.1],[8.4,3.7],[4.1,-2.2]])
w3=np.array([[-3.0,-2.9],[0.5,8.7],[2.9,2.1],[-0.1,5.2],[-4.0,2.2],[-1.3,3.7],[-3.4,6.2],[-4.1,3.4],[-5.1,1.6],[1.9,5.1]])
w4=np.array([[-2.0,-8.4],[-8.9,0.2],[-4.2,-7.7],[-8.5,-3.2],[-6.7,-4.0],[-0.5,-9.2],[-5.3,-6.7],[-8.7,-6.4],[-7.1,-9.7],[-8.0,-6.3]])

def sigmoid(x):#sigmoid函数
    return 1/(1+np.exp(-x))
def yinx(w,x):#条件概率
    return sigmoid(np.dot(x,w))
def logistic(x1,x2):
    x3=np.array([[0,0.1,1.1],[0,6.8,7.1],[0,-3.5,-4.1],[0,2.0,2.7],[0,4.1,2.8],[0,3.1,5.0],[0,-0.8,-1.3],[0,0.9,1.2],[0,5.0,6.4],[0,3.9,4.0]])
    x4=np.array([[0,0.1,1.1],[0,6.8,7.1],[0,-3.5,-4.1],[0,2.0,2.7],[0,4.1,2.8],[0,3.1,5.0],[0,-0.8,-1.3],[0,0.9,1.2],[0,5.0,6.4],[0,3.9,4.0]])
    #以上两个矩阵只是我不知道怎么初始化一个3×10的矩阵所以直接搬过来的，没有实在意义
    for i in range(0,10):
        x3[i]=np.insert(x1[i],2,1)
    for i in range(0,10):
        x4[i]=np.insert(x2[i],2,1)
    #以上为将向量变为增广向量的过程
    w=np.array([0.0,0.0,0.0])#w为判别向量，下为罗杰斯特回归过程
    for time in range(0,100000):
        count=np.array([0.0,0.0,0.0])
        for i in range(0,10):
            count+=x3[i]*(yinx(w,x3[i])-1)
            count+=x4[i]*(yinx(w,x4[i]))
        w-=count
    recordx1=x1[:,0]
    recordy1=x1[:,1]
    recordx2=x2[:,0]
    recordy2=x2[:,1]
    plt.scatter(recordx1, recordy1, color='blue')
    plt.scatter(recordx2, recordy2, color='red')
    plt.plot([-w[1]/5,w[1]/2],[-w[2]/w[1]+w[0]/5,-w[2]/w[1]-w[0]/2],'yellow')
    plt.show()
logistic(w1,w3)
logistic(w2,w4)